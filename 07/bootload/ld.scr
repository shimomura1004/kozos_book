/* OUTPUT_FORMAT("elf32-h8300") */
OUTPUT_ARCH(h8300h)
ENTRY("_start")

/* H7 に合わせたメモリ配置 */
/* o = origin, l = length */
MEMORY
{
    /* ROM は全部で 512KB */
    romall(rx)      : o = 0x000000, l = 0x080000 /* 512KB */
    /* vectors を物理メモリの先頭に配置 */
    /* h8 の場合、物理メモリの先頭に割り込みベクタが置かれる想定になっている*/
    vectors(r)      : o = 0x000000, l = 0x000100 /* top of ROM */
    rom(rx)         : o = 0x000100, l = 0x07ff00

    /* RAM は全部で 16KB */
    ramall(rwx)     : o = 0xffbf20, l = 0x004000 /* 16KB */
    softvec(rw)     : o = 0xffbf20, l = 0x000040 /* RAM の先頭 */
    buffer(rwx)     : o = 0xffdf20, l = 0x001d00 /* 8KB */
    data(rwx)       : o = 0xfffc20, l = 0x000300
    /* stack は ram の末尾から先頭に向けて伸びていく */
    stack(rw)       : o = 0xffff00, l = 0x000000 /* end of RAM*/
}

SECTIONS
{
    /* vector.o 内の .data セクションを MEMORY で定義した vectors に配置 */
    .vectors : {
        vector.o(.data)
    } > vectors

    /* 術得てのオブジェクトファイルのテキストセクションを集める */
    .text : {
        /* text セクションの先頭を表すシンボルを配置 */
        /* シンボルはすべてアドレスにつけた名前 */
        /* 他の C コードから text_start という名前で参照できる */
        _text_start = . ;
        /* text セクションにオブジェクトファイルの text を配置 */
        *(.text)
        /* text セクションの終端を表すシンボルを配置 */
        _etext = .;
    } > rom /* text セクションは ROM に配置 */

    .rodata : {
        /* 先頭アドレスにシンボルを配置、シンボル名は _ で始めると C から参照しやすい */
        _rodata_start = . ;
        *(.strings)
        *(.rodata)
        *(.rodata.*)
        _erodata = . ;
    } > rom

    /* 割込みハンドラのアドレスを置く配列としてシンボル _softvec を定義し、 */
    /* その配列は RAM の先頭(softvec)に置く */
    .softvec : {
        _softvec = .;
    } > softvec

    /* ブートローダが受信したデータを保存するのに使う領域 */
    .buffer : {
        _buffer_start = . ;
    } > buffer

    .data : {
        _data_start = . ;
        *(.data)
        _edata = . ;
    } > data AT> rom /* .data は data 領域(RAM 上)に配置 */
    /* AT>rom は物理アドレスの指定、物理アドレスは ROM 上に設定される */

    .bss : {
        _bss_start = . ;
        *(.bss)
        *(COMMON)
        _ebss = . ;
    } > data AT> rom

    /* 4バイトのアラインメント、カレントのアドレスを4の倍数に揃える */
    . = ALIGN(4);
    /* セクションの最後にシンボルを配置 */
    _end = . ;

    .stack : {
        /* stack というシンボルを配置 */
        _stack = .;
    } > stack
}
